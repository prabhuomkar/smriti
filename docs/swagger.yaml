openapi: 3.0.3
info:
  title: Smriti API
  description: Smarter Home for all your Photos and Videos
  version: 24.05.08
servers:
  - url: https://localhost:5001
tags:
  - name: MediaItems
    description: Everything related to your Photos & Videos
  - name: Library
    description: Manage your collections of Photos & Videos
  - name: Explore
    description: Features on top of your MediaItems & Albums
  - name: Albums
    description: Collection of your Photos & Videos
  - name: Authentication
    description: Authentication for your application
  - name: User Management
    description: User Management for your application
  - name: Sharing
    description: Sharing Albums or MediaItems
  - name: Jobs
    description: Background jobs for your MediaItems
paths:
  /version:
    get:
      summary: Get version of Smriti
      description: Get version of Smriti
      operationId: getVersion
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
  /disk:
    get:
      summary: Get disk usage of Smriti
      description: Get disk usage of Smriti
      operationId: getDisk
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Disk'
  /v1/features:
    get:
      summary: Get list of enabled features
      description: Get list of enabled features
      operationId: getFeatures
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Features'
  /v1/yearsAgo/{monthDate}/mediaItems:
    get:
      tags:
        - Explore
      parameters:
        - name: monthDate
          in: path
          description: Month and Date in MMDD format
          required: true
          schema:
            type: string
      summary: Get all mediaItems which are N years ago from given month & date
      description: Get all mediaItems which are N years ago from given month & date
      operationId: getYearsAgoMediaItems
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaItems'
        '400':
          description: Bad Request
        '401':
          description: Unauthenticated
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
  /v1/search:
    get:
      parameters:
        - name: q
          in: query
          description: Search Query
          schema:
            type: string
            example: pizza
      summary: Search existing mediaItems
      description: Search existing mediaItems
      operationId: searchMediaItems
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaItems'
        '400':
          description: Bad Request
        '401':
          description: Unauthenticated
        '500':
          description: Internal Server Error
  /v1/mediaItems:
    get:
      tags:
        - MediaItems
      parameters:
        - name: page
          in: query
          description: Pagination page
          schema:
            type: number
            default: 1
        - name: limit
          in: query
          description: Pagination limit
          schema:
            type: number
            default: 15
        - name: type
          in: query
          description: MediaItem Type
          schema:
            type: string
            example: video
        - name: category
          in: query
          description: MediaItem Category
          schema:
            type: string
            example: live
        - name: status
          in: query
          description: MediaItem Status
          schema:
            type: string
            example: FAILED
      summary: Get all existing mediaItems
      description: Get all existing mediaItems
      operationId: getMediaItems
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaItems'
        '400':
          description: Bad Request
        '401':
          description: Unauthenticated
        '500':
          description: Internal Server Error
    post:
      tags:
        - MediaItems
      summary: Upload a new mediaItem
      description: Upload a new mediaItem
      operationId: uploadMediaItem
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
        '401':
          description: Unauthenticated
        '500':
          description: Internal Server Error
  /v1/mediaItems/{id}:
    get:
      tags:
        - MediaItems
      parameters:
        - name: id
          in: path
          description: ID of mediaItem
          required: true
          schema:
            type: string
            format: uuid
      summary: Get an existing mediaItem
      description: Get an existing mediaItem
      operationId: getMediaItem
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaItem'
        '400':
          description: Bad Request
        '401':
          description: Unauthenticated
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
    put:
      tags:
        - MediaItems
      parameters:
        - name: id
          in: path
          description: ID of mediaItem
          required: true
          schema:
            type: string
            format: uuid
      summary: Update an existing mediaItem
      description: Update an existing mediaItem
      operationId: updateMediaItem
      security:
        - bearerAuth: []
      requestBody:
        description: MediaItem request body
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MediaItemRequest'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthenticated
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
    delete:
      tags:
        - MediaItems
      parameters:
        - name: id
          in: path
          description: ID of mediaItem
          required: true
          schema:
            type: string
            format: uuid
      summary: Delete an existing mediaItem
      description: Delete an existing mediaItem
      operationId: deleteMediaItem
      security:
        - bearerAuth: []
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthenticated
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
  /v1/mediaItems/{id}/places:
    get:
      tags:
        - MediaItems
      parameters:
        - name: id
          in: path
          description: ID of mediaItem
          required: true
          schema:
            type: string
            format: uuid
      summary: Get places from an existing mediaItem
      description: Get places from an existing mediaItem
      operationId: getMediaItemPlaces
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Places'
        '400':
          description: Bad Request
        '401':
          description: Unauthenticated
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
  /v1/mediaItems/{id}/things:
    get:
      tags:
        - MediaItems
      parameters:
        - name: id
          in: path
          description: ID of mediaItem
          required: true
          schema:
            type: string
            format: uuid
      summary: Get things from an existing mediaItem
      description: Get things from an existing mediaItem
      operationId: getMediaItemThings
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Things'
        '400':
          description: Bad Request
        '401':
          description: Unauthenticated
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
  /v1/mediaItems/{id}/people:
    get:
      tags:
        - MediaItems
      parameters:
        - name: id
          in: path
          description: ID of mediaItem
          required: true
          schema:
            type: string
            format: uuid
      summary: Get people from an existing mediaItem
      description: Get people from an existing mediaItem
      operationId: getMediaItemPeople
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/People'
        '400':
          description: Bad Request
        '401':
          description: Unauthenticated
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
  /v1/mediaItems/{id}/albums:
    get:
      tags:
        - MediaItems
      parameters:
        - name: id
          in: path
          description: ID of mediaItem
          required: true
          schema:
            type: string
            format: uuid
      summary: Get albums from an existing mediaItem
      description: Get albums from an existing mediaItem
      operationId: getMediaItemAlbums
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Albums'
        '400':
          description: Bad Request
        '401':
          description: Unauthenticated
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
  /v1/favourites:
    get:
      tags:
        - Library
      summary: Get all favourite mediaItems
      description: Get all favourite mediaItems
      operationId: getFavouriteMediaItems
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaItems'
        '400':
          description: Bad Request
        '401':
          description: Unauthenticated
        '500':
          description: Internal Server Error
    post:
      tags:
        - Library
      summary: Add favourite mediaItems
      description: Add favourite mediaItems
      operationId: addFavouriteMediaItems
      security:
        - bearerAuth: []
      requestBody:
        description: List of mediaitems request
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MediaItemsRequest'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthenticated
        '500':
          description: Internal Server Error
    delete:
      tags:
        - Library
      summary: Remove favourite mediaItems
      description: Remove favourite mediaItems
      operationId: removeFavouriteMediaItems
      security:
        - bearerAuth: []
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthenticated
        '500':
          description: Internal Server Error
  /v1/hidden:
    get:
      tags:
        - Library
      summary: Get all hidden mediaItems
      description: Get all hidden mediaItems
      operationId: getHiddenMediaItems
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaItems'
        '400':
          description: Bad Request
        '401':
          description: Unauthenticated
        '500':
          description: Internal Server Error
    post:
      tags:
        - Library
      summary: Add hidden mediaItems
      description: Add hidden mediaItems
      operationId: addHiddenMediaItems
      security:
        - bearerAuth: []
      requestBody:
        description: List of mediaitems request
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MediaItemsRequest'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthenticated
        '500':
          description: Internal Server Error
    delete:
      tags:
        - Library
      summary: Remove hidden mediaItems
      description: Remove hidden mediaItems
      operationId: removeHiddenMediaItems
      security:
        - bearerAuth: []
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthenticated
        '500':
          description: Internal Server Error
  /v1/trash:
    get:
      tags:
        - Library
      summary: Get all deleted mediaItems
      description: Get all deleted mediaItems
      operationId: getDeletedMediaItems
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaItems'
        '400':
          description: Bad Request
        '401':
          description: Unauthenticated
        '500':
          description: Internal Server Error
    post:
      tags:
        - Library
      summary: Add deleted mediaItems
      description: Add deleted mediaItems
      operationId: addDeletedMediaItems
      security:
        - bearerAuth: []
      requestBody:
        description: List of mediaitems request
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MediaItemsRequest'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthenticated
        '500':
          description: Internal Server Error
    delete:
      tags:
        - Library
      summary: Remove deleted mediaItems
      description: Remove deleted mediaItems
      operationId: removeDeletedMediaItems
      security:
        - bearerAuth: []
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthenticated
        '500':
          description: Internal Server Error
  /v1/explore/places:
    get:
      tags:
        - Explore
      summary: Get all place entities
      description: Get all place entities
      operationId: getPlaces
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Places'
        '400':
          description: Bad Request
        '401':
          description: Unauthenticated
        '500':
          description: Internal Server Error
  /v1/explore/places/{id}/mediaItems:
    get:
      tags:
        - Explore
      parameters:
        - name: id
          in: path
          description: ID of place
          required: true
          schema:
            type: string
            format: uuid
      summary: Get mediaItems of a place entity
      description: Get mediaItems of a place entity
      operationId: getPlaceMediaItems
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaItems'
        '400':
          description: Bad Request
        '401':
          description: Unauthenticated
        '500':
          description: Internal Server Error
  /v1/explore/things:
    get:
      tags:
        - Explore
      summary: Get all thing entities
      description: Get all thing entities
      operationId: getThings
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Things'
        '400':
          description: Bad Request
        '401':
          description: Unauthenticated
        '500':
          description: Internal Server Error
  /v1/explore/things/{id}/mediaItems:
    get:
      tags:
        - Explore
      parameters:
        - name: id
          in: path
          description: ID of thing
          required: true
          schema:
            type: string
            format: uuid
      summary: Get mediaItems of a thing entity
      description: Get mediaItems of a thing entity
      operationId: getThingMediaItems
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaItems'
        '400':
          description: Bad Request
        '401':
          description: Unauthenticated
        '500':
          description: Internal Server Error
  /v1/explore/people:
    get:
      tags:
        - Explore
      summary: Get all people entities
      description: Get all people entities
      operationId: getPeople
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/People'
        '400':
          description: Bad Request
        '401':
          description: Unauthenticated
        '500':
          description: Internal Server Error
  /v1/explore/people/{id}:
    put:
      tags:
        - Explore
      parameters:
        - name: id
          in: path
          description: ID of people
          required: true
          schema:
            type: string
            format: uuid
      summary: Update a people entity
      description: Update a people entity
      operationId: updatePeople
      security:
        - bearerAuth: []
      requestBody:
        description: People request body
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PeopleRequest'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthenticated
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
  /v1/explore/people/{id}/mediaItems:
    get:
      tags:
        - Explore
      parameters:
        - name: id
          in: path
          description: ID of people
          required: true
          schema:
            type: string
            format: uuid
      summary: Get mediaItems of a people entity
      description: Get mediaItems of a people entity
      operationId: getPeopleMediaItems
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaItems'
        '400':
          description: Bad Request
        '401':
          description: Unauthenticated
        '500':
          description: Internal Server Error
  /v1/albums:
    get:
      tags:
        - Albums
      parameters:
        - name: sort
          in: query
          description: Sort order
          schema:
            type: string
            default: name
            example: updatedAt
        - name: page
          in: query
          description: Pagination page
          schema:
            type: number
            default: 1
        - name: limit
          in: query
          description: Pagination limit
          schema:
            type: number
            default: 15
        - name: shared
          in: query
          description: Shared
          schema:
            type: boolean
            example: false
      summary: Get all existing albums
      description: Get all existing albums
      operationId: getAlbums
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Albums'
        '400':
          description: Bad Request
        '401':
          description: Unauthenticated
        '500':
          description: Internal Server Error
    post:
      tags:
        - Albums
      summary: Create a new album
      description: Create a new album
      operationId: createAlbum
      security:
        - bearerAuth: []
      requestBody:
        description: Album request body
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlbumRequest'
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
        '401':
          description: Unauthenticated
        '500':
          description: Internal Server Error
  /v1/albums/{id}:
    get:
      tags:
        - Albums
      parameters:
        - name: id
          in: path
          description: ID of album
          required: true
          schema:
            type: string
            format: uuid
      summary: Get an existing album
      description: Get an existing album
      operationId: getAlbum
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Album'
        '400':
          description: Bad Request
        '401':
          description: Unauthenticated
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
    put:
      tags:
        - Albums
      parameters:
        - name: id
          in: path
          description: ID of album
          required: true
          schema:
            type: string
            format: uuid
      summary: Update an existing album
      description: Update an existing album
      operationId: updateAlbum
      security:
        - bearerAuth: []
      requestBody:
        description: Album request body
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlbumRequest'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthenticated
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
    delete:
      tags:
        - Albums
      parameters:
        - name: id
          in: path
          description: ID of album
          required: true
          schema:
            type: string
            format: uuid
      summary: Delete an existing album
      description: Delete an existing album
      operationId: deleteAlbum
      security:
        - bearerAuth: []
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthenticated
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
  /v1/albums/{id}/mediaItems:
    get:
      tags:
        - Albums
      parameters:
        - name: id
          in: path
          description: ID of album
          required: true
          schema:
            type: string
            format: uuid
      summary: Get mediaItems of an existing album
      description: Get mediaItems of an existing album
      operationId: getAlbumMediaItems
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaItems'
        '400':
          description: Bad Request
        '401':
          description: Unauthenticated
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
    post:
      tags:
        - Albums
      parameters:
        - name: id
          in: path
          description: ID of album
          required: true
          schema:
            type: string
            format: uuid
      summary: Add mediaItems to an existing album
      description: Add mediaItems to an existing album
      operationId: addAlbumMediaItems
      security:
        - bearerAuth: []
      requestBody:
        description: List of mediaitems request
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MediaItemsRequest'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthenticated
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
    delete:
      tags:
        - Albums
      parameters:
        - name: id
          in: path
          description: ID of album
          required: true
          schema:
            type: string
            format: uuid
      summary: Remove mediaItems from an existing album
      description: Remove mediaItems from an existing album
      operationId: removeAlbumMediaItems
      security:
        - bearerAuth: []
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthenticated
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
  /v1/sharing/{id}:
    get:
      tags:
        - Sharing
      parameters:
        - name: id
          in: path
          description: ID of shared album
          required: true
          schema:
            type: string
            format: uuid
      summary: Get an existing shared album
      description: Get an existing shared album
      operationId: getSharedAlbum
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Album'
        '400':
          description: Bad Request
        '401':
          description: Unauthenticated
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
  /v1/sharing/{id}/mediaItems:
    get:
      tags:
        - Sharing
      parameters:
        - name: id
          in: path
          description: ID of shared album
          required: true
          schema:
            type: string
            format: uuid
      summary: Get mediaItems of an existing shared album
      description: Get mediaItems of an existing shared album
      operationId: getSharedAlbumMediaItems
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaItems'
        '400':
          description: Bad Request
        '401':
          description: Unauthenticated
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
  /v1/auth/login:
    post:
      tags:
        - Authentication
      summary: User Login
      description: User Login
      operationId: authLogin
      requestBody:
        description: Login request body
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthenticated
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
  /v1/auth/refresh:
    post:
      tags:
        - Authentication
      summary: User Refresh Token
      description: User Refresh Token
      operationId: authRefresh
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthenticated
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
  /v1/auth/logout:
    post:
      tags:
        - Authentication
      summary: User Logout
      description: User Logout
      operationId: authLogout
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthenticated
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
  /v1/users:
    get:
      tags:
        - User Management
      summary: Get all existing users
      description: Get all existing users
      operationId: getUsers
      security:
        - basicAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users'
        '400':
          description: Bad Request
        '401':
          description: Unauthenticated
        '500':
          description: Internal Server Error
    post:
      tags:
        - User Management
      summary: Create a new user
      description: Create a new user
      operationId: createUser
      security:
        - basicAuth: []
      requestBody:
        description: User request body
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
        '401':
          description: Unauthenticated
        '500':
          description: Internal Server Error
  /v1/users/{id}:
    get:
      tags:
        - User Management
      parameters:
        - name: id
          in: path
          description: ID of user
          required: true
          schema:
            type: string
            format: uuid
      summary: Get an existing user
      description: Get an existing user
      operationId: getUser
      security:
        - basicAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad Request
        '401':
          description: Unauthenticated
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
    put:
      tags:
        - User Management
      parameters:
        - name: id
          in: path
          description: ID of user
          required: true
          schema:
            type: string
            format: uuid
      summary: Update an existing user
      description: Update an existing user
      operationId: updateUser
      security:
        - basicAuth: []
      requestBody:
        description: User request body
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthenticated
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
    delete:
      tags:
        - User Management
      parameters:
        - name: id
          in: path
          description: ID of user
          required: true
          schema:
            type: string
            format: uuid
      summary: Delete an existing user
      description: Delete an existing user
      operationId: deleteUser
      security:
        - basicAuth: []
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthenticated
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
  /v1/jobs:
    get:
      tags:
        - Jobs
      parameters:
        - name: page
          in: query
          description: Pagination page
          schema:
            type: number
            default: 1
        - name: limit
          in: query
          description: Pagination limit
          schema:
            type: number
            default: 15
      summary: Get all existing jobs
      description: Get all existing jobs
      operationId: getJobs
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Jobs'
        '400':
          description: Bad Request
        '401':
          description: Unauthenticated
        '500':
          description: Internal Server Error
    post:
      tags:
        - Jobs
      summary: Create a new job
      description: Create a new job
      operationId: createJob
      security:
        - bearerAuth: []
      requestBody:
        description: Job request body
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobRequest'
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
        '401':
          description: Unauthenticated
        '409':
          description: Conflict
        '500':
          description: Internal Server Error
  /v1/jobs/{id}:
    get:
      tags:
        - Jobs
      parameters:
        - name: id
          in: path
          description: ID of job
          required: true
          schema:
            type: string
            format: uuid
      summary: Get an existing job
      description: Get an existing job
      operationId: getJob
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        '400':
          description: Bad Request
        '401':
          description: Unauthenticated
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
    put:
      tags:
        - Jobs
      parameters:
        - name: id
          in: path
          description: ID of job
          required: true
          schema:
            type: string
            format: uuid
      summary: Update an existing job
      description: Update an existing job
      operationId: updateJob
      security:
        - bearerAuth: []
      requestBody:
        description: job request body
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobRequest'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthenticated
        '404':
          description: Not Found
        '409':
          description: Conflict
        '500':
          description: Internal Server Error
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    basicAuth:
      type: http
      scheme: basic
  schemas:
    Version:
      type: object
      properties:
        version:
          type: string
          example: 24.05.08
        gitSha:
          type: string
          example: addf120b430021c36c232c99ef8d926aea2acd6b
    Features:
      type: object
      properties:
        favourites:
          type: boolean
          example: true
        hidden:
          type: boolean
          example: false
    Disk:
      type: object
      properties:
        total:
          type: number
          example: 93896515584
        free:
          type: number
          example: 58737410048
        used:
          type: number
          example: 35159105536
    AuthRequest:
      type: object
      properties:
        username:
          type: string
          example: prabhuomkar
        password:
          type: string
          example: Pwd1234!
    AuthResponse:
      type: object
      properties:
        accessToken:
          type: string
          example: string
        refreshToken:
          type: string
          example: string
    MediaItemRequest:
      type: object
      properties:
        description:
          type: string
          example: Pictures from Wedding of Jane and Doe
        favourite:
          type: boolean
          example: true
        hidden:
          type: boolean
          example: false
    MediaItemFace:
      type: object
      properties:
        thumbnail:
          readOnly: true
          type: string
          example: base-64-thumbnail-image
    MediaItem:
      type: object
      properties:
        id:
          readOnly: true
          type: string
          format: uuid
          example: 102dc522de-1669-48a4-8270-4950a0237599
        userId:
          readOnly: true
          type: string
          format: uuid
          example: 102dc522de-1669-48a4-8270-4950a0237599
        filename:
          readOnly: true
          type: string
          example: IMG_4942.jpg
        description:
          readOnly: true
          type: string
          example: Picture of a pizza from New York
        mimeType:
          readOnly: true
          type: string
          example: image/jpeg
        placeholder:
          readOnly: true
          type: string
          example: base-64-placeholder-image
        sourceUrl:
          readOnly: true
          type: string
          example: https://cdn.smriti/source
        previewUrl:
          readOnly: true
          type: string
          example: https://cdn.smriti/preview
        thumbnailUrl:
          readOnly: true
          type: string
          example: https://cdn.smriti/thumbnail
        favourite:
          type: boolean
          example: false
        shared:
          type: boolean
          example: true
        hidden:
          type: boolean
          example: false
        deleted:
          type: boolean
          example: false
        status:
          readOnly: true
          type: string
          enum: ["UNSPECIFIED", "PROCESSING", "READY", "FAILED"]
        mediaItemType:
          readOnly: true
          type: string
          enum: ["photo", "video"]
        mediaItemCategory:
          readOnly: true
          type: string
          enum: ["default", "screenshot", "panorama", "slow", "motion", "live"]
        width:
          readOnly: true
          type: integer
          example: 1080
        height:
          readOnly: true
          type: integer
          example: 720
        creationTime:
          readOnly: true
          type: string
          format: date-time
          example: "2022-09-14T16:58:28Z"
        latitude:
          readOnly: true
          type: number
          example: 19.384982
        longitude:
          readOnly: true
          type: number
          example: -70.638324
        cameraMake:
          readOnly: true
          type: string
          example: Apple
        cameraModel:
          readOnly: true
          type: string
          example: iPhone 12
        focalLength:
          readOnly: true
          type: string
          example: 5.49 mm
        apertureFNumber:
          readOnly: true
          type: string
          example: f/1.8
        isoEquivalent:
          readOnly: true
          type: string
          example: ISO758
        exposureTime:
          readOnly: true
          type: string
          example: 1/20
        fps:
          readOnly: true
          type: string
          example: 60
        createdAt:
          readOnly: true
          type: string
          format: date-time
          example: "2022-09-14T16:58:28Z"
        updatedAt:
          readOnly: true
          type: string
          format: date-time
          example: "2022-09-14T16:58:28Z"
    AlbumRequest:
      type: object
      properties:
        name:
          type: string
          example: Jane's Wedding
        description:
          type: string
          example: Pictures from Wedding of Jane and Doe
        coverMediaItemId:
          type: string
          format: uuid
          example: 102dc522de-1669-48a4-8270-4950a0237599
        shared:
          type: boolean
          example: true
        hidden:
          type: boolean
          example: false
    MediaItemsRequest:
      type: object
      properties:
        mediaItems:
          type: array
          items:
            type: string
            format: uuid
            example: 102dc522de-1669-48a4-8270-4950a0237599
    Album:
      type: object
      properties:
        id:
          readOnly: true
          type: string
          format: uuid
          example: 102dc522de-1669-48a4-8270-4950a0237599
        userId:
          readOnly: true
          type: string
          format: uuid
          example: 102dc522de-1669-48a4-8270-4950a0237599
        name:
          type: string
          example: Jane's Wedding
        description:
          type: string
          example: Pictures from Wedding of Jane and Doe
        coverMediaItemId:
          type: string
          format: uuid
          example: 102dc522de-1669-48a4-8270-4950a0237599
        shared:
          type: boolean
          example: true
        hidden:
          type: boolean
          example: false
        mediaItemsCount:
          type: integer
          example: 42
        createdAt:
          readOnly: true
          type: string
          format: date-time
          example: "2022-09-14T16:58:28Z"
        updatedAt:
          readOnly: true
          type: string
          format: date-time
          example: "2022-09-14T16:58:28Z"
        coverMediaItem:
          $ref: '#/components/schemas/MediaItem'
    Place:
      type: object
      properties:
        id:
          readOnly: true
          type: string
          format: uuid
          example: 102dc522de-1669-48a4-8270-4950a0237599
        postcode:
          type: string
          example: 421201
        town:
          type: string
          example: Dallas
        city:
          type: string
          example: Mumbai
        state:
          type: string
          example: Washington
        country:
          type: string
          example: India
        coverMediaItemId:
          type: string
          format: uuid
          example: 102dc522de-1669-48a4-8270-4950a0237599
        createdAt:
          type: string
          format: date-time
          example: "2022-09-14T16:58:28Z"
        updatedAt:
          type: string
          format: date-time
          example: "2022-09-14T16:58:28Z"
        coverMediaItem:
          $ref: '#/components/schemas/MediaItem'
    Thing:
      type: object
      properties:
        id:
          readOnly: true
          type: string
          format: uuid
          example: 102dc522de-1669-48a4-8270-4950a0237599
        name:
          type: string
          example: Cars
        coverMediaItemId:
          type: string
          format: uuid
          example: 102dc522de-1669-48a4-8270-4950a0237599
        createdAt:
          type: string
          format: date-time
          example: "2022-09-14T16:58:28Z"
        updatedAt:
          type: string
          format: date-time
          example: "2022-09-14T16:58:28Z"
        coverMediaItem:
          $ref: '#/components/schemas/MediaItem'
    PeopleRequest:
      type: object
      properties:
        name:
          type: string
          example: John Doe
        hidden:
          type: boolean
          example: false
        coverMediaItemId:
          type: string
          format: uuid
          example: 102dc522de-1669-48a4-8270-4950a0237599
    Person:
      type: object
      properties:
        id:
          readOnly: true
          type: string
          format: uuid
          example: 102dc522de-1669-48a4-8270-4950a0237599
        name:
          type: string
          example: Cars
        coverMediaItemId:
          type: string
          format: uuid
          example: 102dc522de-1669-48a4-8270-4950a0237599
        coverMediaItemFaceId:
          type: string
          format: uuid
          example: 102dc522de-1669-48a4-8270-4950a0237599
        createdAt:
          type: string
          format: date-time
          example: "2022-09-14T16:58:28Z"
        updatedAt:
          type: string
          format: date-time
          example: "2022-09-14T16:58:28Z"
        coverMediaItemFace:
          $ref: '#/components/schemas/MediaItemFace'
    UserRequest:
      type: object
      properties:
        name:
          type: string
          example: John Doe
        username:
          type: string
          example: johndoe
        password:
          type: string
          example: somesecrethash
    User:
      type: object
      properties:
        id:
          readOnly: true
          type: string
          format: uuid
          example: 102dc522de-1669-48a4-8270-4950a0237599
        name:
          type: string
          example: John Doe
        username:
          type: string
          example: johndoe
        password:
          type: string
          example: somesecrethash
        createdAt:
          readOnly: true
          type: string
          format: date-time
          example: "2022-09-14T16:58:28Z"
        updatedAt:
          readOnly: true
          type: string
          format: date-time
          example: "2022-09-14T16:58:28Z"
    Job:
      type: object
      properties:
        id:
          readOnly: true
          type: string
          format: uuid
          example: 102dc522de-1669-48a4-8270-4950a0237599
        userId:
          readOnly: true
          type: string
          format: uuid
          example: 102dc522de-1669-48a4-8270-4950a0237599
        components:
          type: string
          example: metadata, faces
        status:
          readOnly: true
          type: string
          enum: ["SCHEDULED", "RUNNING", "PAUSED", "COMPLETED", "STOPPED"]
        lastMediaItemId:
          type: string
          format: uuid
          example: 102dc522de-1669-48a4-8270-4950a0237599
        createdAt:
          readOnly: true
          type: string
          format: date-time
          example: "2022-09-14T16:58:28Z"
        updatedAt:
          readOnly: true
          type: string
          format: date-time
          example: "2022-09-14T16:58:28Z"
    JobRequest:
      type: object
      properties:
        components:
          type: string
          example: metadata, faces
        status:
          type: string
          enum: ["SCHEDULED", "RUNNING", "PAUSED", "COMPLETED", "STOPPED"]
          example: "PAUSED"
    MediaItems:
      type: array
      items:
        $ref: '#/components/schemas/MediaItem'
    Places:
      type: array
      items:
        $ref: '#/components/schemas/Place'
    Things:
      type: array
      items:
        $ref: '#/components/schemas/Thing'
    People:
      type: array
      items:
        $ref: '#/components/schemas/Person'
    Albums:
      type: array
      items:
        $ref: '#/components/schemas/Album'
    Users:
      type: array
      items:
        $ref: '#/components/schemas/User'
    Jobs:
      type: array
      items:
        $ref: '#/components/schemas/Job'